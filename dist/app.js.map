{"version":3,"sources":["../app.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","cors","index","summary","detail","deleteFile","upload","login","register","checkToken","sitesStatus","startSite","scs","app","set","join","__dirname","use","json","urlencoded","extended","static","all","req","res","next","header","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,UAAUF,QAAQ,eAAR,CAAd;AACA,IAAIG,SAASH,QAAQ,QAAR,CAAb;AACA,IAAII,eAAeJ,QAAQ,eAAR,CAAnB;AACA,IAAIK,aAAaL,QAAQ,aAAR,CAAjB;AACA,IAAIM,OAAON,QAAQ,MAAR,CAAX;;AAEA,IAAIO,QAAQP,QAAQ,gBAAR,CAAZ;AACA,IAAIQ,UAAUR,QAAQ,kBAAR,CAAd;AACA,IAAIS,SAAST,QAAQ,iBAAR,CAAb;AACA,IAAIU,aAAaV,QAAQ,iBAAR,CAAjB;AACA,IAAIW,SAASX,QAAQ,iBAAR,CAAb;AACA,IAAIY,QAAQZ,QAAQ,qBAAR,CAAZ;AACA,IAAIa,WAAWb,QAAQ,wBAAR,CAAf;AACA,IAAIc,aAAad,QAAQ,qBAAR,CAAjB;AACA,IAAIe,cAAcf,QAAQ,0BAAR,CAAlB;AACA,IAAIgB,YAAYhB,QAAQ,yBAAR,CAAhB;AACA,IAAIiB,MAAMjB,QAAQ,qBAAR,CAAV;;AAEA,IAAIkB,MAAMnB,SAAV;;AAEA;AACAmB,IAAIC,GAAJ,CAAQ,OAAR,EAAiBlB,KAAKmB,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEA;AACA;AACAD,IAAII,GAAJ,CAAQnB,OAAO,KAAP,CAAR;AACAe,IAAII,GAAJ,CAAQjB,WAAWkB,IAAX,EAAR;AACAL,IAAII,GAAJ,CAAQjB,WAAWmB,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQlB,cAAR;AACAc,IAAII,GAAJ,CAAQvB,QAAQ2B,MAAR,CAAezB,KAAKmB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAH,IAAIS,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACnCD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,6EAA3C;AACAF,QAAIE,MAAJ,CAAW,eAAX,EAA4B,GAA5B;AACAD;AACH,CAND;AAOAZ,IAAII,GAAJ,CAAQ,GAAR,EAAaf,KAAb;AACAW,IAAII,GAAJ,CAAQ,UAAR,EAAoBd,OAApB;AACAU,IAAII,GAAJ,CAAQ,SAAR,EAAmBb,MAAnB;AACAS,IAAII,GAAJ,CAAQ,QAAR,EAAkBV,KAAlB;AACAM,IAAII,GAAJ,CAAQ,WAAR,EAAqBT,QAArB;AACAK,IAAII,GAAJ,CAAQ,QAAR,EAAkBR,UAAlB;AACAI,IAAII,GAAJ,CAAQ,cAAR,EAAwBP,WAAxB;AACAG,IAAII,GAAJ,CAAQ,YAAR,EAAsBN,SAAtB;AACAE,IAAII,GAAJ,CAAQ,SAAR,EAAmBZ,UAAnB;AACAQ,IAAII,GAAJ,CAAQ,SAAR,EAAmBX,MAAnB;AACAO,IAAII,GAAJ,CAAQ,MAAR,EAAgBL,GAAhB;;AAEA;AACAC,IAAII,GAAJ,CAAQ,UAAUM,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9B,QAAIE,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,QAAIE,MAAJ,GAAa,GAAb;AACAJ,SAAKE,GAAL;AACH,CAJD;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACAd,IAAII,GAAJ,CAAQ,UAAUU,GAAV,EAAeJ,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACnC;AACAD,QAAIM,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAP,QAAIM,MAAJ,CAAWE,KAAX,GAAmBT,IAAIV,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAH,QAAIK,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAL,QAAIU,MAAJ,CAAW,OAAX;AACH,CARD;;AAUAC,OAAOC,OAAP,GAAiBvB,GAAjB","file":"app.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar cors = require('cors');\n\nvar index = require('./routes/index');\nvar summary = require('./routes/summary');\nvar detail = require('./routes/detail');\nvar deleteFile = require('./routes/delete');\nvar upload = require('./routes/upload');\nvar login = require('./routes/user/login');\nvar register = require('./routes/user/register');\nvar checkToken = require('./routes/user/check');\nvar sitesStatus = require('./routes/site/sitestatus');\nvar startSite = require('./routes/site/startsite');\nvar scs = require('./routes/search/scs');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.all('*', function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header('Access-Control-Allow-Methods', 'PUT, GET, POST, DELETE, OPTIONS');\n    res.header(\"Access-Control-Allow-Headers\", \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\");\n    res.header('Authorization', '*');\n    next();\n});\napp.use('/', index);\napp.use('/summary', summary);\napp.use('/detail', detail);\napp.use('/login', login)\napp.use('/register', register)\napp.use('/check', checkToken)\napp.use('/sitesStatus', sitesStatus)\napp.use('/startSite', startSite)\napp.use('/delete', deleteFile)\napp.use('/upload', upload)\napp.use('/scs', scs)\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n//跨域\n\n// app.use(function (req, res, next) {\n//     // Website you wish to allow to connect\n//\n// });\n// error handler\napp.use(function (err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.render('error');\n});\n\nmodule.exports = app;\n"]}