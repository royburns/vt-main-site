{"version":3,"sources":["../../routes/summary.js"],"names":["express","require","router","Router","http","options_1","host","port","path","options_2","options_3","options_4","headers","options_5","httpReq","temp","errorEvent","ip","resp","res","on","json","status","message","get","req","next","splice","length","Promise","resolve","reject","request","chunk","console","log","push","JSON","parse","end","then","data","module","exports"],"mappings":"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","file":"summary.js","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nlet http = require('http')\r\nlet options_1 = {\r\n    host: '192.168.11.24',\r\n    port: 3000,\r\n    path: '/summary'\r\n    // headers: {\r\n    //     'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n    // }\r\n};\r\nlet options_2 = {\r\n    host: '192.168.9.179',\r\n    // host: '192.168.100.155',\r\n    port: 3000,\r\n    path: '/summary'\r\n    // headers: {\r\n    //     'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n    // }\r\n};\r\nlet options_3 = {\r\n    host: '192.168.9.190',\r\n    // host: '192.168.100.229',\r\n    port: 3000,\r\n    path: '/summary'\r\n    // headers: {\r\n    //     'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n    // }\r\n};\r\nlet options_4 = {\r\n    host: '192.168.9.217',\r\n    // host: '192.168.100.154',\r\n    port: 3000,\r\n    path: '/summary',\r\n    headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n    }\r\n};\r\nlet options_5 = {\r\n    host: '192.168.9.218',\r\n    // host: '192.168.100.231',\r\n    port: 3000,\r\n    path: '/summary'\r\n    // headers: {\r\n    //     'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n    // }\r\n};\r\nlet httpReq;\r\nlet temp = [];\r\n\r\nfunction errorEvent(ip, resp, res) {\r\n    resp.on('error', function () {\r\n        res.json({\r\n            status: 'ERROR',\r\n            message: '服务器' + ip + '连接异常！'\r\n        })\r\n    })\r\n}\r\n\r\n/* GET users listing. */\r\nrouter.get('/', function (req, res, next) {\r\n    temp.splice(0, temp.length);\r\n    new Promise(function (resolve, reject) {\r\n        httpReq = http.request(options_1, resp => {\r\n            resp.on('data', function (chunk) {\r\n                console.log('BODY: ' + chunk);\r\n                temp.push(JSON.parse(chunk));\r\n                resolve();\r\n            });\r\n        })\r\n        httpReq.end();\r\n        errorEvent(options_1.host, httpReq, res)\r\n    })\r\n    .then(function () {\r\n        return new Promise(function (resolve, reject) {\r\n            httpReq = http.request(options_2, resp => {\r\n                resp.on('data', function (chunk) {\r\n                    console.log('BODY: ' + chunk);\r\n                    temp.push(JSON.parse(chunk));\r\n                    resolve();\r\n                });\r\n\r\n            })\r\n            httpReq.end();\r\n            errorEvent(options_2.host, httpReq, res)\r\n        })\r\n    })\r\n    .then(function () {\r\n        return new Promise(function (resolve, reject) {\r\n            httpReq = http.request(options_3, resp => {\r\n                resp.on('data', function (chunk) {\r\n                    console.log('BODY: ' + chunk);\r\n                    temp.push(JSON.parse(chunk));\r\n                    resolve();\r\n                });\r\n\r\n            })\r\n            httpReq.end();\r\n            errorEvent(options_3.host, httpReq, res)\r\n        })\r\n    })\r\n    .then(function () {\r\n        return new Promise(function (resolve, reject) {\r\n            httpReq = http.request(options_4, resp => {\r\n                resp.on('data', function (chunk) {\r\n                    console.log('BODY: ' + chunk);\r\n                    temp.push(JSON.parse(chunk));\r\n                    resolve();\r\n                });\r\n            })\r\n            httpReq.end();\r\n            errorEvent(options_4.host, httpReq, res)\r\n        })\r\n    })\r\n    .then(function () {\r\n        httpReq = http.request(options_5, resp => {\r\n            resp.on('data', function (chunk) {\r\n                console.log('BODY: ' + chunk);\r\n                temp.push(JSON.parse(chunk));\r\n                res.json({\r\n                    status: 'SUCCESS',\r\n                    message: '成功获取资源总表',\r\n                    data: temp\r\n                })\r\n            });\r\n            // errorEvent(resp)\r\n        })\r\n        httpReq.end();\r\n        errorEvent(options_5.host, httpReq, res)\r\n    })\r\n});\r\nmodule.exports = router;\r\n"]}