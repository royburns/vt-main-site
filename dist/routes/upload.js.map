{"version":3,"sources":["../../routes/upload.js"],"names":["express","require","router","Router","http","qs","multer","fs","bf","upload","post","array","req","res","next","console","log","files","filesArr","options","host","port","path","headers","method","requ","request","resp","on","chunk","send","JSON","parse","temp","forEach","item","push","fileName","originalname","buffer","toString","write","stringify","end","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,SAASF,QAAQG,MAAR,EAAb;AACA,IAAIC,OAAOH,QAAQ,MAAR,CAAX;AACA,IAAMI,KAAKJ,QAAQ,aAAR,CAAX;AACA,IAAMK,SAASL,QAAQ,QAAR,CAAf;AACA,IAAMM,KAAKN,QAAQ,IAAR,CAAX;AACA,IAAMO,KAAKP,QAAQ,QAAR,CAAX;AACA;AACA,IAAIQ,SAASH,QAAb;AACAJ,OAAOQ,IAAP,CAAY,GAAZ,EAAiBD,OAAOE,KAAP,CAAa,MAAb,CAAjB,EAAuC,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7D;AACA;AACA;AACAC,YAAQC,GAAR,CAAYJ,IAAIK,KAAhB;AACA,QAAIC,WAAWN,IAAIK,KAAnB;AACA,QAAIE,UAAU;AACVC,cAAM,eADI;AAEVC,cAAM,IAFI;AAGVC,cAAM,SAHI;AAIVC,iBAAS;AACL,4BAAgB;AADX,SAJC;AAOVC,gBAAQ;AAPE,KAAd;AASA,QAAIC,OAAOrB,KAAKsB,OAAL,CAAaP,OAAb,EAAsB,gBAAQ;AACrCQ,aAAKC,EAAL,CAAQ,MAAR,EAAgB,UAAUC,KAAV,EAAiB;AAC7BhB,gBAAIiB,IAAJ,CAASC,KAAKC,KAAL,CAAWH,KAAX,CAAT;AACH,SAFD;AAGH,KAJU,CAAX;AAKA,QAAII,OAAO,EAAX;AACAf,aAASgB,OAAT,CAAiB,UAACC,IAAD,EAAU;AACvBF,aAAKG,IAAL,CAAU;AACNC,sBAAUF,KAAKG;AADT,SAAV;AAIH,KALD;AAMAvB,YAAQC,GAAR,CAAYE,SAAS,CAAT,EAAYqB,MAAZ,CAAmBC,QAAnB,EAAZ;AACAf,SAAKgB,KAAL,CAAWpC,GAAGqC,SAAH,CAAa;AACpBL,kBAAUnB,SAAS,CAAT,EAAYoB;AADF,KAAb,CAAX;AAIAb,SAAKkB,GAAL,CAASzB,SAAS,CAAT,EAAYqB,MAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CA3ED;;AA6EAK,OAAOC,OAAP,GAAiB3C,MAAjB","file":"upload.js","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nlet http = require('http')\r\nconst qs = require('querystring')\r\nconst multer = require('multer')\r\nconst fs = require('fs')\r\nconst bf = require('buffer')\r\n/* GET users listing. */\r\nlet upload = multer()\r\nrouter.post('/', upload.array('file'), function (req, res, next) {\r\n    // let detail = req.body.detail\r\n    // let mainType = detail.mainType\r\n    // let subType = detail.subType\r\n    console.log(req.files)\r\n    let filesArr = req.files;\r\n    let options = {\r\n        host: '192.168.11.24',\r\n        port: 3000,\r\n        path: '/upload',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n        },\r\n        method: 'POST',\r\n    };\r\n    let requ = http.request(options, resp => {\r\n        resp.on('data', function (chunk) {\r\n            res.send(JSON.parse(chunk));\r\n        });\r\n    })\r\n    let temp = []\r\n    filesArr.forEach((item) => {\r\n        temp.push({\r\n            fileName: item.originalname,\r\n            // content: bf.toString(item.buffer)\r\n        })\r\n    })\r\n    console.log(filesArr[0].buffer.toString())\r\n    requ.write(qs.stringify({\r\n        fileName: filesArr[0].originalname,\r\n        // fileContent: filesArr[0].buffer\r\n    }))\r\n    requ.end(filesArr[0].buffer)\r\n    // filesArr.forEach(item => {\r\n    //     new Promise((resolve, reject) => {\r\n    //         fs.readFile(`./upload/${item.filename}`, (err, data) => {\r\n    //             if (err) {\r\n    //                 reject(err)\r\n    //             } else {\r\n    //                 resolve(data)\r\n    //             }\r\n    //         })\r\n    //     }).then((param) => {\r\n    //         fs.writeFile(`./${item.originalname}`, param, err => {\r\n    //             if (err) {\r\n    //                 console.log(err)\r\n    //             } else {\r\n    //                 console.log('文件写入成功')\r\n    //             }\r\n    //         })\r\n    //     }).catch((e) => {\r\n    //         console.log(e)\r\n    //     })\r\n    //\r\n    // })\r\n    // let options = {\r\n    //     host: detail.address.replace('http://', ''),\r\n    //     port: 3000,\r\n    //     path: '/detail',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n    //     },\r\n    //     method: 'POST',\r\n    // };\r\n    // let requ = http.request(options, resp => {\r\n    //     resp.on('data', function (chunk) {\r\n    //         res.send(JSON.parse(chunk));\r\n    //     });\r\n    // })\r\n    // requ.write(qs.stringify({\r\n    //     mainType: mainType,\r\n    //     subType: subType\r\n    // }))\r\n    // requ.end()\r\n\r\n});\r\n\r\nmodule.exports = router;\r\n"]}